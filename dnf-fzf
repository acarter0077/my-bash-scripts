#!/bin/sh
# dnf-fzf
# Find, install, and remove dnf packages using fzf

print_usage() {
	printf "Usage: dnf-fzf [install|remove|info] [package_query]\n"
	printf "Runs 'dnf-fzf install' if no command is specified\n"
}

get_available_packages() {
	printf "%s" "$(dnf list -q --available | sed '/^Available Packages/d' \
		| cut -f1  | cut -d'.' -f1 | uniq)"
}

get_installed_packages() {
	printf "%s" "$(dnf list -q --installed | sed '/^Installed Packages/d' \
		| cut -f1 | cut -d'.' -f1 | uniq)"
}

install_package() {
	available_package=$(get_available_packages | fzf -m --query="$1" | tr '\n' ' ')
	[ -n "$available_package" ] && eval "sudo dnf install $available_package"
}

remove_package() {
	installed_package=$(get_installed_packages | fzf -m --query="$1" | tr '\n' ' ')
	[ -n "$installed_package" ] && eval "sudo dnf remove $installed_package"
}

info_package() {
	available_package=$(get_available_packages | fzf -m --query="$1" | tr '\n' ' ')
	[ -n "$available_package" ] && eval "dnf info $available_package"
}

[ $# -gt 2 ] && {
	printf "dnf-fzf: Too many arguments\n"
	exit 1
}

[ $# -ge 1 ] && {
	case $1 in
		"install")
			install_package "$2"
			;;
		"remove")
			remove_package "$2"
			;;
		"info")
			info_package "$2"
			;;
		"help"|"--help"|"-h")
			print_usage
			exit 1
			;;
		*)
			install_package "$1"
			;;
	esac
}
